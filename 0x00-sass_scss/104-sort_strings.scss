/* sort list*/
@import "104-sort_list";
$default-order: " " "!" "#" "$" "%" "&" "'" "(" ")" "*" "+" "," "-" "." "/" "0" "1" "2" "3" "4" "5" "6" "7" "8" "9" ":" ";" "<" "=" ">" "?" "@" "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M" "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z" "[" "\"" "]" "^" "_" "`" "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z" "{" "|" "}" "~" !default; /// Compares two string to determine which comes first
@function _str-compare($a, $b, $order) {
  @if type-of($a) == "number" and type-of($b) == "number" {
    @return $a < $b;
  }
  $a: to-lower-case($a + unquote(""));
  $b: to-lower-case($b + unquote(""));
  @for $i from 1 through min(str-length($a), str-length($b)) {
    $char-a: str-slice($a, $i, $i);
    $char-b: str-slice($b, $i, $i);
    @if $char-a and $char-b and index($order, $char-a) != index($order, $char-b) {
       @return index($order, $char-a) < index($order, $char-b);
    }
  }
  @return str-length($a) < str-length($b);
}
@function quick-sort($list, $order: $default-order) {
  $less: ();
  $equal: ();
  $large: ();
  @if length($list) > 1 {
    $seed: nth($list, ceil(length($list) / 2));
    @each $item in $list {
       @if $item == $seed{
        $equal: append($equal, $item, list-separator($list));
      }
      @else if _str-compare($item, $seed, $order) {
        $less: append($less, $item, list-separator($list));
      }
      @else if not _str-compare($item, $seed, $order) {
        $large: append($large, $item, list-separator($list));
      }
    }
    @return join(join(quick-sort($less, $order), $equal), quick-sort($large, $order));
  }
  @return $list;
}
$list_to_sort: quick-sort($list_to_sort);
@debug $list_to_sort;
